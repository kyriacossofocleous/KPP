C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Sparse Stoichiometric Data Structures File                       
C                                                                  
C Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor  
C       (http://www.cs.vt.edu/~asandu/Software/KPP)                
C KPP is distributed under GPL, the general public licence         
C       (http://www.gnu.org/copyleft/gpl.html)                     
C (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
C (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech            
C     With important contributions from:                           
C        M. Damian, Villanova University, USA                      
C        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
C                                                                  
C File                 : tropo_ref_StoichiomSP.f                   
C Time                 : Wed Mar  9 12:16:32 2022                  
C Working directory    : /home/kyriacos/CyprusInstitute/kpp/tropo_ref
C Equation file        : tropo_ref.kpp                             
C Output root filename : tropo_ref                                 
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




C Row-compressed sparse data for the Jacobian of reaction products JVRP
      BLOCK DATA JVRP_SPARSE_DATA

      INCLUDE 'tropo_ref_Sparse.h'
      INTEGER i

      DATA CROW_JVRP /
     *  1,  2,  4,  6,  8, 10, 11, 13, 14, 16, 17, 19,
     * 20, 22, 23, 25, 26, 28, 30, 32, 34, 35, 37, 38,
     * 39, 41, 42, 43, 45, 47, 48, 49, 51, 53, 55, 57,
     * 58, 60, 62, 64, 66, 67, 68, 70, 71, 73, 75, 77,
     * 79, 81, 83, 85, 87, 89, 91, 93, 95, 96, 97, 98,
     *100,102,104,106,108,110,112,113,115,117,119,121,
     *123,125,127,129,131,133,134,136,138,139,140,141,
     *143,145,147,149,151,153,155,157,159,161,163,165,
     *167,169,170,172,173,175,177,179,181,183,184,186,
     *188,189,191,193,195,196,198,200,202,204,206,208,
     *210,212,213,215,217,219,221,223,225,227,228,230,
     *232,234,236,238,240,242,243,245,247,248,250,252,
     *253,254,255,257,259,261,263,265,267,269,271,273,
     *275,277,279,281,283,285,287,289,291,293,295,297,
     *299,301,303,305,307,308,310,312,313,315,317 / 


      DATA( ICOL_JVRP(i), i = 1, 252 ) /
     * 76, 74, 81, 74, 76, 81, 83, 76, 83, 26, 76, 83,
     * 83, 82, 83, 74, 81, 84, 27, 76, 84, 57, 57, 84,
     * 26, 41, 84, 74, 84, 81, 82, 76, 82, 31, 74, 82,
     * 82, 23, 23, 84, 76, 31, 31, 84, 78, 84, 77, 77,
     * 77, 84, 77, 82, 37, 81, 37, 82, 37, 33, 84, 77,
     * 83, 79, 84, 79, 83, 79, 79, 72, 76, 32, 72, 81,
     * 65, 81, 29, 84, 19, 84, 51, 81, 20, 84, 46, 81,
     * 30, 84, 61, 81, 30, 83, 28, 84, 38, 81, 65, 51,
     * 46, 65, 82, 51, 82, 46, 82, 61, 82, 72, 82, 62,
     * 84, 63, 81, 62, 62, 83, 63, 82, 40, 84, 47, 81,
     * 60, 84, 48, 81, 40, 74, 60, 74, 80, 81, 76, 80,
     * 80, 67, 81, 67, 76, 67, 47, 48, 47, 82, 48, 82,
     * 78, 80, 67, 78, 60, 83, 52, 76, 52, 82, 52, 81,
     * 77, 80, 79, 80, 67, 77, 67, 79, 24, 84, 44, 81,
     * 35, 35, 84, 42, 42, 84, 36, 84, 36, 83, 34, 84,
     * 54, 76, 25, 54, 81, 39, 81, 34, 44, 82, 54, 82,
     * 39, 82, 37, 64, 84, 53, 81, 53, 82, 75, 84, 59,
     * 81, 59, 82, 73, 84, 66, 76, 21, 66, 81, 66, 82,
     * 73, 84, 49, 81, 49, 82, 45, 84, 56, 76, 22, 56,
     * 81, 56, 82, 64, 74, 74, 75, 73, 74, 69, 81, 69,
     * 76, 69, 70, 81, 70, 76, 70, 68, 81, 68, 76, 68 / 

      DATA( ICOL_JVRP(i), i = 253, 316 ) /
     * 45, 58, 58, 84, 64, 83, 55, 81, 55, 76, 55, 82,
     * 75, 83, 50, 81, 50, 82, 73, 83, 73, 83, 43, 81,
     * 43, 82, 45, 83, 70, 82, 69, 82, 69, 78, 70, 78,
     * 68, 78, 16, 84, 17, 84, 11, 74, 12, 74, 13, 74,
     * 14, 74, 15, 74, 82, 84, 71, 71, 84, 18, 84, 83,
     * 32, 84, 82, 83 / 


      DATA( IROW_JVRP(i), i = 1, 252 ) /
     *  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  7,  7,
     *  8,  9,  9, 10, 11, 11, 12, 13, 13, 14, 15, 15,
     * 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 22, 22,
     * 23, 24, 25, 25, 26, 27, 28, 28, 29, 29, 30, 31,
     * 32, 32, 33, 33, 34, 34, 35, 35, 36, 37, 37, 38,
     * 38, 39, 39, 40, 40, 41, 42, 43, 43, 44, 45, 45,
     * 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51,
     * 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 58,
     * 59, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 65,
     * 65, 66, 66, 67, 68, 68, 69, 69, 70, 70, 71, 71,
     * 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 77, 77,
     * 78, 79, 79, 80, 80, 81, 82, 83, 84, 84, 85, 85,
     * 86, 86, 87, 87, 88, 88, 89, 89, 90, 90, 91, 91,
     * 92, 92, 93, 93, 94, 94, 95, 95, 96, 96, 97, 97,
     * 98, 99, 99,100,101,101,102,102,103,103,104,104,
     *105,105,106,107,107,108,108,109,110,110,111,111,
     *112,112,113,114,114,115,115,116,116,117,117,118,
     *118,119,119,120,120,121,121,122,123,123,124,124,
     *125,125,126,126,127,127,128,128,129,129,130,131,
     *131,132,132,133,133,134,134,135,135,136,136,137,
     *137,138,139,139,140,140,141,142,142,143,143,144 / 

      DATA( IROW_JVRP(i), i = 253, 316 ) /
     *145,146,147,147,148,148,149,149,150,150,151,151,
     *152,152,153,153,154,154,155,155,156,156,157,157,
     *158,158,159,159,160,160,161,161,162,162,163,163,
     *164,164,165,165,166,166,167,167,168,168,169,169,
     *170,170,171,171,172,172,173,174,174,175,175,176,
     *177,177,178,178 / 


      END




C  Stoichiometric Matrix in Compressed Column Sparse Format        

      BLOCK DATA STOICM_MATRIX

      INCLUDE 'tropo_ref_Sparse.h'
      INTEGER i

      DATA CCOL_STOICM /
     *  1,  4,  7, 10, 13, 16, 19, 21, 25, 28, 30, 33,
     * 36, 39, 42, 45, 47, 50, 53, 57, 60, 63, 66, 68,
     * 70, 73, 76, 79, 82, 86, 89, 91, 95, 98,103,106,
     *109,112,117,120,124,128,131,134,137,141,146,149,
     *152,157,160,167,170,180,184,187,192,195,198,202,
     *205,208,211,214,217,220,226,229,233,237,240,245,
     *248,254,261,269,273,277,279,283,287,289,293,296,
     *299,302,306,310,313,316,319,324,327,330,333,336,
     *341,348,349,353,357,361,367,370,373,376,379,386,
     *389,393,396,399,402,405,408,415,418,421,429,432,
     *435,438,441,446,449,452,458,461,464,467,470,475,
     *478,487,496,505,509,513,514,518,522,524,528,532,
     *534,537,540,543,546,552,554,556,559,566,568,572,
     *575,580,582,586,589,592,596,600,604,606,608,611,
     *614,617,620,623,625,629,633,637,639,641,646 / 


      DATA( IROW_STOICM(i), i = 1, 252 ) /
     * 74, 76, 81, 74, 76, 81, 74, 76, 83, 76, 81, 83,
     * 26, 76, 83, 26, 76, 83, 81, 83, 74, 76, 81, 83,
     * 57, 82, 83, 74, 84, 27, 81, 84, 27, 81, 84, 57,
     * 76, 84, 57, 76, 84, 57, 83, 84, 26, 57, 41, 82,
     * 84, 74, 82, 84, 76, 81, 82, 84, 31, 76, 82, 31,
     * 76, 82, 74, 82, 84, 23, 82, 23, 84, 23, 82, 84,
     * 27, 57, 76, 31, 76, 82, 31, 76, 84,  1, 78, 82,
     * 84, 41, 77, 82, 41, 77, 41, 77, 82, 84, 37, 77,
     * 82, 33, 37, 76, 81, 82, 33, 37, 82, 33, 37, 82,
     * 33, 82, 84, 41, 57, 77, 82, 83, 72, 79, 84, 57,
     * 72, 79, 83, 41, 65, 79, 82, 29, 41, 79, 32, 72,
     * 76, 32, 72, 76, 65, 72, 76, 81, 65, 76, 77, 81,
     * 82, 29, 65, 84, 19, 51, 84, 51, 76, 79, 81, 82,
     * 20, 46, 84,  3, 46, 62, 76, 79, 81, 82, 30, 61,
     * 84, 28, 46, 51, 61, 62, 65, 76, 79, 81, 82, 30,
     * 57, 61, 83, 28, 38, 84, 38, 76, 77, 79, 81, 65,
     * 77, 82, 51, 79, 82, 46, 62, 79, 82, 65, 71, 82,
     * 51, 71, 82, 46, 71, 82, 61, 71, 82, 71, 72, 82,
     * 62, 63, 84, 28, 63, 72, 76, 79, 81, 51, 62, 72,
     * 57, 62, 63, 83, 42, 63, 65, 82, 40, 47, 84, 47,
     * 76, 77, 81, 82, 48, 60, 84, 48, 76, 77, 79, 81 / 

      DATA( IROW_STOICM(i), i = 253, 504 ) /
     * 82, 29, 40, 41, 74, 77, 80, 82, 60, 65, 67, 74,
     * 77, 79, 80, 82, 76, 77, 80, 81, 76, 77, 80, 83,
     * 33, 80, 67, 76, 79, 81, 67, 76, 79, 83,  2, 67,
     * 47, 77, 79, 82, 48, 79, 82, 47, 71, 82, 48, 71,
     * 82,  1, 77, 78, 80,  1, 67, 78, 79, 52, 60, 83,
     *  7, 52, 76,  8, 52, 82, 52, 76, 77, 79, 81,  9,
     * 77, 80,  9, 79, 80,  9, 67, 77,  9, 67, 79, 24,
     * 36, 44, 82, 84, 34, 35, 42, 44, 76, 81, 82, 35,
     * 35, 41, 82, 84, 41, 42, 72, 82, 41, 42, 72, 84,
     * 36, 39, 54, 76, 82, 84, 36, 57, 83, 34, 54, 84,
     * 25, 54, 76, 25, 54, 76, 35, 42, 54, 72, 76, 81,
     * 82, 39, 76, 81, 34, 54, 72, 82, 44, 71, 82, 54,
     * 71, 82, 39, 71, 82, 37, 77, 82, 53, 64, 84, 53,
     * 73, 75, 76, 77, 81, 82, 53, 71, 82, 59, 75, 84,
     * 45, 58, 59, 72, 76, 77, 81, 82, 59, 71, 82, 66,
     * 73, 84, 21, 66, 76, 21, 66, 76, 58, 66, 81, 82,
     * 83, 66, 71, 82, 49, 73, 84, 49, 58, 76, 77, 81,
     * 82, 49, 71, 82, 45, 56, 84, 22, 56, 76, 22, 56,
     * 76, 56, 76, 77, 81, 82, 56, 71, 82, 64, 69, 70,
     * 73, 74, 75, 77, 80, 82, 58, 68, 72, 74, 75, 77,
     * 79, 80, 82, 58, 68, 73, 74, 76, 77, 80, 81, 82 / 

      DATA( IROW_STOICM(i), i = 505, 645 ) /
     * 69, 75, 76, 81, 69, 75, 76, 83, 69, 70, 73, 76,
     * 81, 70, 73, 76, 83, 16, 70, 58, 68, 76, 81, 58,
     * 68, 76, 83, 17, 68, 45, 77, 82, 58, 72, 82, 58,
     * 72, 84, 55, 64, 83, 55, 73, 75, 76, 77, 81, 55,
     * 76, 55, 82, 50, 75, 83, 50, 58, 72, 76, 77, 81,
     * 82, 50, 82, 57, 66, 73, 83, 43, 73, 83, 43, 58,
     * 76, 77, 81, 43, 82, 45, 56, 57, 83, 70, 71, 82,
     * 69, 71, 82,  1, 69, 75, 78,  1, 70, 73, 78,  1,
     * 68, 75, 78, 16, 84, 17, 84,  4, 11, 74,  5, 12,
     * 74,  6, 13, 74,  5, 14, 74,  6, 15, 74, 82, 84,
     * 71, 77, 82, 84, 65, 71, 77, 84, 10, 18, 78, 84,
     * 76, 83, 32, 84, 57, 76, 82, 83, 84 / 


      DATA( ICOL_STOICM(i), i = 1, 252 ) /
     *  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,
     *  5,  5,  5,  6,  6,  6,  7,  7,  8,  8,  8,  8,
     *  9,  9,  9, 10, 10, 11, 11, 11, 12, 12, 12, 13,
     * 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 17, 17,
     * 17, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 21,
     * 21, 21, 22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
     * 26, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 29,
     * 29, 30, 30, 30, 31, 31, 32, 32, 32, 32, 33, 33,
     * 33, 34, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36,
     * 37, 37, 37, 38, 38, 38, 38, 38, 39, 39, 39, 40,
     * 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 43, 43,
     * 43, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46,
     * 46, 47, 47, 47, 48, 48, 48, 49, 49, 49, 49, 49,
     * 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 52, 52,
     * 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54,
     * 54, 54, 54, 55, 55, 55, 56, 56, 56, 56, 56, 57,
     * 57, 57, 58, 58, 58, 59, 59, 59, 59, 60, 60, 60,
     * 61, 61, 61, 62, 62, 62, 63, 63, 63, 64, 64, 64,
     * 65, 65, 65, 66, 66, 66, 66, 66, 66, 67, 67, 67,
     * 68, 68, 68, 68, 69, 69, 69, 69, 70, 70, 70, 71,
     * 71, 71, 71, 71, 72, 72, 72, 73, 73, 73, 73, 73 / 

      DATA( ICOL_STOICM(i), i = 253, 504 ) /
     * 73, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
     * 75, 75, 75, 75, 76, 76, 76, 76, 77, 77, 77, 77,
     * 78, 78, 79, 79, 79, 79, 80, 80, 80, 80, 81, 81,
     * 82, 82, 82, 82, 83, 83, 83, 84, 84, 84, 85, 85,
     * 85, 86, 86, 86, 86, 87, 87, 87, 87, 88, 88, 88,
     * 89, 89, 89, 90, 90, 90, 91, 91, 91, 91, 91, 92,
     * 92, 92, 93, 93, 93, 94, 94, 94, 95, 95, 95, 96,
     * 96, 96, 96, 96, 97, 97, 97, 97, 97, 97, 97, 98,
     * 99, 99, 99, 99,100,100,100,100,101,101,101,101,
     *102,102,102,102,102,102,103,103,103,104,104,104,
     *105,105,105,106,106,106,107,107,107,107,107,107,
     *107,108,108,108,109,109,109,109,110,110,110,111,
     *111,111,112,112,112,113,113,113,114,114,114,115,
     *115,115,115,115,115,115,116,116,116,117,117,117,
     *118,118,118,118,118,118,118,118,119,119,119,120,
     *120,120,121,121,121,122,122,122,123,123,123,123,
     *123,124,124,124,125,125,125,126,126,126,126,126,
     *126,127,127,127,128,128,128,129,129,129,130,130,
     *130,131,131,131,131,131,132,132,132,133,133,133,
     *133,133,133,133,133,133,134,134,134,134,134,134,
     *134,134,134,135,135,135,135,135,135,135,135,135 / 

      DATA( ICOL_STOICM(i), i = 505, 645 ) /
     *136,136,136,136,137,137,137,137,138,139,139,139,
     *139,140,140,140,140,141,141,142,142,142,142,143,
     *143,143,143,144,144,145,145,145,146,146,146,147,
     *147,147,148,148,148,149,149,149,149,149,149,150,
     *150,151,151,152,152,152,153,153,153,153,153,153,
     *153,154,154,155,155,155,155,156,156,156,157,157,
     *157,157,157,158,158,159,159,159,159,160,160,160,
     *161,161,161,162,162,162,162,163,163,163,163,164,
     *164,164,164,165,165,166,166,167,167,167,168,168,
     *168,169,169,169,170,170,170,171,171,171,172,172,
     *173,173,173,173,174,174,174,174,175,175,175,175,
     *176,176,177,177,178,178,178,178,178 / 


      DATA( STOICM(i), i = 1, 168 ) /
     *    1,   -1,    1,   -1,    1,   -1,   -1,   -1,
     *    1,    2,   -1,   -1,    1,   -1,   -1,   -1,
     *    1,    1,    1,   -1, 0.85, 0.85, 0.15,   -1,
     *    1,   -1,   -1,   -1,    2,    1,   -1,   -1,
     *   -1,    1,    1,    1,   -1,   -1,   -1,    1,
     *    1,   -1,    1,   -1,   -1,    2,   -1,    1,
     *   -1,   -1,    1,   -1,    1,   -1,   -1,    1,
     *    1,   -1,   -1,   -1,    1,    1,   -1,   -1,
     *    1,    1,   -2,   -1,    2,   -1,    1,   -1,
     *    1,    1,   -2,   -1,    1,    1,   -1,    1,
     *   -1,    1,   -1,    1,   -1,    1,   -1,    2,
     *    1,   -1,    1,   -1,    1,   -1,    1,   -1,
     *   -1,    1,   -1,    1,   -1,    1,    1,   -1,
     *   -1,    1,   -2,    2,   -1,    1,   -1,    1,
     *    1,   -1,    1,   -1,    1,   -1,   -1,    1,
     *    1,   -1,   -1,    1,    1,   -1,    1,    1,
     *    1,   -1,    1,   -1,   -1,   -1,    1,    1,
     *    1,   -1,    1,   -1,   -1,    1,    1,   -1,
     *    1,   -1,    1,   -1,   -1,    1,   -1,   -1,
     *    1,    1,   -1,    1,   -1,    1,   -1, 0.03,
     *   -1, 0.49, 0.97, 0.46,   -1, 0.97,   -1,    1 / 

      DATA( STOICM(i), i = 169, 336 ) /
     *   -1,0.263,0.1057,0.1879,-0.94,  0.3,0.1116,0.9261,
     *1.0482,-1.1892, 0.28,   -1,    1,    1,   -1,   -1,
     *    1,   -1,   -1,  2.5,  0.8,  2.1, -1.5,   -2,
     *  1.4,  0.8,   -2,  1.6,  1.2,   -2, 0.28,  1.9,
     * 0.37,   -1,    1,   -1,   -1,    1,   -1,   -1,
     *    1,   -1,   -1,    1,   -1,    1,   -1,   -1,
     *   -1,    1,   -1, 0.05,   -1, 0.94, 0.95, 0.94,
     *   -1,    1,   -1,    1,    1,   -1,    1,   -1,
     *    1,   -1,    1,   -1,   -1,    1,   -1,   -1,
     *    1,    2,   -1,    1,    1,   -1,   -1,   -1,
     *    1,    1,    1,   -1,    1, 0.06,   -1, 0.42,
     *   -1,    1,  0.4, 0.12,   -1,0.215,  0.2,   -1,
     *0.525,  0.5,  0.2, 0.23,    1,    1,   -1,   -1,
     *   -1,    1,   -1,    1,    1,   -1,   -1,    1,
     *    1,   -1,   -1,   -1,    1,    1,    1,   -1,
     *   -2,  2.4,  0.4,  1.2,   -2,  2.2,  1.2,   -1,
     *    1,   -1,   -1,    1,   -1,    1,    1,   -1,
     *   -1,    1,   -1,   -1,    1,    1,   -1,   -1,
     *    1,   -1,   -1,    1,   -1,   -1,   -1,    2,
     *    1,    1,   -1,    1,   -1,   -1,    1,   -1,
     *   -1,    1,   -1,   -1,    1,   -1,   -1,   -1 / 

      DATA( STOICM(i), i = 337, 504 ) /
     * 0.16, 0.84, 0.16,   -1,    1, 0.18, 0.72,   -1,
     *    1,   -1,    1,   -1,   -1,    2,    1,   -1,
     *    1,   -1,    1,    1,    1,   -1,    1,   -1,
     *   -1,  0.9,  0.9,-0.0315, 0.83, -1.9,   -1,    1,
     *   -1,   -1,    1,   -1,    1,   -1,   -1,   -1,
     *    1,    1, 0.89, 0.11,   -1, 0.05,    1,   -1,
     * 0.92,   -1,    1,   -1,   -1,    1, 0.02, 0.98,
     *   -1,    1,   -1,   -1,    1,   -1,   -1,    1,
     *   -1,   -1,    1,    1,    1,   -1,   -1,   -1,
     * 0.45, 0.45,  0.9,  0.9,   -1,  0.9,   -1,    1,
     *   -1,    1,   -1,   -1,  0.6,  0.3,   -1,  0.6,
     *  0.9,  0.3,   -1,  0.3,   -1,    1,   -1,    1,
     *   -1,   -1,    1,   -1,   -1,   -1,    1,    1,
     *    1,   -1,   -3,    1,    3,   -1,    1,   -1,
     *    1,   -1,   -1,   -1,  0.9,  0.9,  0.9,   -1,
     *  0.9,   -1,    1,   -1,   -1,    1,   -1,    1,
     *   -1,   -1,   -1,    1,    1,   -1,    1,    1,
     *   -1,    1,   -1,    1,   -1,   -1,  0.2,  0.3,
     *  0.3,   -1,  0.2,  0.5,  0.2, 0.06,  0.5,  0.2,
     * 0.15,   -1,   -1,  0.5, 0.15,  0.2, 0.21,  0.5,
     *  0.2,   -1,   -1, 0.15, 0.65,  0.2,-0.15, 0.36 / 

      DATA( STOICM(i), i = 505, 645 ) /
     *   -1,    1,    1,   -1,   -1,    1,   -1,    1,
     *   -1,   -1,    1,    1,   -1,   -1,    1,   -1,
     *    1,    1,   -1,    1,   -1,    1,   -1,    1,
     *   -1,   -1,    1,    1,   -1,   -1,    1,    2,
     *   -1,    1,    1,   -1,    1,   -1,    1,   -1,
     *   -1,   -1,  0.5,  0.5,    2,    1,   -1,   -1,
     *   -1,   -1,   -1,    1,   -1,   -1,   -1,  0.5,
     *  0.5,    2,    1,   -1,  0.5,   -1,   -1,    1,
     *    1,   -1,   -1,    1,   -1,   -1,   -1,    1,
     *    2,    1,   -1,   -1,   -1,   -1,    1,    1,
     *   -1,   -1,    1,   -1,   -1,    1,   -1,    1,
     *   -1,    1,   -1,    1,   -1,    1,   -1,    1,
     *   -1,    1,   -1,   -1,   -1,   -1,   -1, 0.11,
     *   -1,   -1, 0.19,   -1,   -1, 0.15,   -1,   -1,
     * 0.39,   -1,   -1, 0.15,   -1,   -1,   -1,   -1,
     *   -1,    1,    1,    1,  0.5,   -1,  0.5, -0.5,
     *    1,   -1,    1,   -1,    2,   -2,   -1,   -1,
     *  0.4,  0.6,   -1,   -1,  0.6 / 


      END


